game:GetService("StarterGui"):SetCore("DevConsoleVisible", true)

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local function getServerList()
    while true do
        local success, req = pcall(function()
            return game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
        end)

        if success and req then
            local ok, body = pcall(HttpService.JSONDecode, HttpService, req)
            if ok and body and body.data then
                return body.data
            else
                warn("Failed to decode server list, retrying in 10 seconds...")
            end
        else
            warn("Failed to get server list, probably rate-limited. Retrying in 10 seconds...")
        end

        task.wait(10)
    end
end

local function teleportToRandomServer()
    while true do
        local servers = {}
        local data = getServerList() -- safe fetch

        for _, v in next, data do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) 
               and v.playing < v.maxPlayers and v.id ~= game.JobId then
                table.insert(servers, v.id)
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(
                game.PlaceId, 
                servers[math.random(1, #servers)], 
                Players.LocalPlayer
            )
            queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/kali9595/somethingdumbing/refs/heads/main/main'))()")
            break
        else
            warn("No available servers found, retrying in 10 seconds...")
            task.wait(10)
        end
    end
end

local targetBrainRots = {
    ["Garama and Madundung"] = true,
    ["La Grande Combinasion"] = true,
    ["La Vacca Staturno Saturnita"] = true,
    ["Chimpanzini Spiderini"] = true,
    ["Los Tralaleritos"] = true,
    ["Las Tralaleritas"] = true,
    ["Graipuss Medussi"] = true,
    ["Nuclearo Dinossauro"] = true,
    ["Tortuginni Dragonfruitini"] = true,
    ["Pot Hotspot"] = true,
    ["Las Vaquitas Saturnitas"] = true,
    ["Chicleteira Bicicleteira"] = true,
    ["Agarrini la Palini"] = true,
    ["Dragon Cannelloni"] = true,
    ["Los Combinasionas"] = true,
    ["Karkerkar Kurkur"] = true,
    ["Los Hotspotsitos"] = true,
    ["Esok Sekolah"] = true,
    ["Los Matteos"] = true,
    ["Dul Dul Dul"] = true,
    ["Blackhole Goat"] = true,
    ["Nooo My Hotspot"] = true,
    ["Sammyini Spyderini"] = true,
    ["La Supreme Combinasion"] = true,
    ["Ketupat Kepat"] = true
}

local function findTargetBases()
    local found = false
    for _, v in pairs(workspace.Plots:GetDescendants()) do
        if v:IsA("TextLabel") and targetBrainRots[v.Text] then
            local targetBase = v.Parent.Parent.Parent.Parent.Parent.Parent.Parent
            print(targetBase.PlotSign.SurfaceGui.Frame.TextLabel.Text .. " has a " .. v.Text)
            setclipboard(game.JobId)
            print("Server JobID has been copied to clipboard - " .. game.JobId)
            found = true
        end
    end
    return found
end

while not findTargetBases() do
    print("No target brainrots found in this server, hopping in 10 seconds...")
    task.wait(10)
    teleportToRandomServer()
end
