local StarterGui = game:GetService("StarterGui")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local teleportCheck = false

game.Players.LocalPlayer.OnTeleport:Connect(function(State)
if not teleportCheck then
teleportCheck = true
queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/kali9595/somethingdumbing/refs/heads/main/main'))()")
end
end)

local function getServerList()
    while true do
        local success, req = pcall(function()
            return game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
        end)

        if success and req then
            local ok, body = pcall(HttpService.JSONDecode, HttpService, req)
            if ok and body and body.data then
                return body.data
            end
        end

        task.wait(10)
    end
end

local function teleportToRandomServer()
    local data = getServerList()
    local servers = {}

    for _, v in next, data do
        if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) 
           and v.playing < v.maxPlayers and v.id ~= game.JobId then
            table.insert(servers, v.id)
        end
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(
            game.PlaceId, 
            servers[math.random(1, #servers)], 
            Players.LocalPlayer
        )
    else
        StarterGui:SetCore("SendNotification", {
            Title = "Server Hopper",
            Text = "No available servers found, retrying soon...",
            Duration = 5
        })
        task.wait(10)
        teleportToRandomServer()
    end
end

local targetBrainRots = {
    ["Garama and Madundung"] = true,
    ["La Grande Combinasion"] = true,
    ["La Vacca Staturno Saturnita"] = true,
    ["Chimpanzini Spiderini"] = true,
    ["Los Tralaleritos"] = true,
    ["Las Tralaleritas"] = true,
    ["Graipuss Medussi"] = true,
    ["Nuclearo Dinossauro"] = true,
    ["Tortuginni Dragonfruitini"] = true,
    ["Pot Hotspot"] = true,
    ["Las Vaquitas Saturnitas"] = true,
    ["Chicleteira Bicicleteira"] = true,
    ["Agarrini la Palini"] = true,
    ["Dragon Cannelloni"] = true,
    ["Los Combinasionas"] = true,
    ["Karkerkar Kurkur"] = true,
    ["Los Hotspotsitos"] = true,
    ["Esok Sekolah"] = true,
    ["Los Matteos"] = true,
    ["Dul Dul Dul"] = true,
    ["Blackhole Goat"] = true,
    ["Nooo My Hotspot"] = true,
    ["Sammyini Spyderini"] = true,
    ["La Supreme Combinasion"] = true,
    ["Ketupat Kepat"] = true
}

--[[local function findTargetBases()
    local found = false
    for _, v in pairs(workspace.Plots:GetDescendants()) do
        if v:IsA("TextLabel") and targetBrainRots[v.Text] then
            local brainrot = v.Text
            found = true

            StarterGui:SetCore("SendNotification", {
                Title = "Brainrot Detected",
                Text = brainrot .. " is in this server. Serverhop?",
                Duration = 10,
                Button1 = "Yes",
                Button2 = "No",
                Callback = function(response)
                    if response == "Yes" then
                        teleportToRandomServer()
                    end
                end
            })
        end
    end
    return found
end]]

local function findTargetBases()
    local found = false
    for _, v in pairs(workspace.Plots:GetDescendants()) do
        if v:IsA("TextLabel") and targetBrainRots[v.Text] then
            local targetBase = v.Parent.Parent.Parent.Parent.Parent.Parent.Parent
            --print(targetBase.PlotSign.SurfaceGui.Frame.TextLabel.Text .. " has a " .. v.Text)
            setclipboard(game.JobId)
            print("Server JobID has been copied to clipboard - " .. game.JobId)
            found = true

            StarterGui:SetCore("SendNotification", {
                Title = "Brainrot Detected",
                Text = targetBase.PlotSign.SurfaceGui.Frame.TextLabel.Text .. " has a "..v.Text..", Serverhop?",
                Duration = 10,
                Button1 = "Yes",
                Button2 = "No",
                Callback = function(response)
                    if response == "Yes" then
                        teleportToRandomServer()
                    end
                end
            })
        end
    end
    return found
end

while not findTargetBases() do
    StarterGui:SetCore("SendNotification", {
        Title = "Server Scanner",
        Text = "No target brainrots found, hopping soon...",
        Duration = 5
    })
    task.wait(10)
    teleportToRandomServer()
end
